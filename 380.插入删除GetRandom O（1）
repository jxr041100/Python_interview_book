


class RandomizedSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.data = []
        self.table = defaultdict()
        

    def insert(self, val: int) -> bool:
        """
        Inserts a value to the set. Returns true if the set did not already contain the specified element.
        """
        if val in self.table: 
            return False
        self.data.append(val)
        self.table[val] = len(self.data)-1
        return True        

    def remove(self, val: int) -> bool:
        """
        Removes a value from the set. Returns true if the set contained the specified element.
        """
        if val not in self.table: return False
        # 获取删除元素的索引，用于和最后一个元素交换
        removed_idx, last_idx = self.table[val],len(self.data)-1
        item = self.data[last_idx]
        # 跟新最后一个元素的位置
        self.table[item] = removed_idx
        # 交换待删除的元素和最后一个元素
        self.data[removed_idx], self.data[last_idx]=self.data[last_idx],val
        
        # 删除
        self.data.pop()
        del self.table[val]
        return True

    def getRandom(self) -> int:
        """
        Get a random element from the set.
        """
        # 产生一个随机数，生成索引
        idx = random.randint(0,len(self.data)-1)
        return self.data[idx]
